{"version":3,"sources":["components/card/index.jsx","components/card-list/index.js","components/search-box/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","Grid","item","lg","md","sm","xs","id","src","monster","alt","name","email","CardList","Container","maxWidth","container","xl","spacing","direction","monsters","map","SearchBox","placeholder","handleChange","TextField","variant","fullWidth","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","className","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAIaA,EAAO,SAACC,GACnB,OACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAIC,GAAG,OAA3C,UACE,qBAAKC,IAAG,+BAA0BR,EAAMS,QAAQF,IAAMG,IAAI,YAC1D,6BAAKV,EAAMS,QAAQE,OACnB,6BAAKX,EAAMS,QAAQG,YCJZC,G,MAAW,SAACb,GACvB,OACE,cAACc,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACd,EAAA,EAAD,CAAMe,WAAS,EAACC,GAAI,GAAIC,QAAS,EAAGC,UAAU,MAA9C,SACGnB,EAAMoB,SAASC,KAAI,SAACZ,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQF,a,gBCSde,MAff,YAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAChC,OACE,cAACV,EAAA,EAAD,CAAWC,SAAS,KAAKR,GAAG,mBAA5B,SACE,cAACkB,EAAA,EAAD,CACEC,QAAQ,WACRnB,GAAG,eACHoB,WAAS,EACTC,KAAK,SACLL,YAAaA,EACbM,SAAUL,OC8BHM,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFN,aAAe,SAACO,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXhB,SAAU,GACVa,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEZ,SAAUqB,S,oBAO/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/BhB,EADD,EACCA,SAAUa,EADX,EACWA,YACZU,EAAmBvB,EAASwB,QAAO,SAACnC,GAAD,OACvCA,EAAQE,KAAKkC,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKE,UAAW,MAAhB,UACE,oBAAIA,UAAW,QAAf,8BACA,cAAC,EAAD,CACExB,YAAY,kBACZC,aAAckB,KAAKlB,eAErB,cAAC,EAAD,CAAUJ,SAAUuB,W,GAhCVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c87f5b0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.css\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <Grid item lg={3} md={4} sm={6} xs={12} id=\"card\">\r\n      <img src={`https://robohash.org/${props.monster.id}`} alt=\"monster\" />\r\n      <h1>{props.monster.name}</h1>\r\n      <h2>{props.monster.email}</h2>\r\n    </Grid>\r\n  );\r\n};\r\n","import { Grid, Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Card } from \"../card\";\r\nimport \"./card-list.css\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid container xl={12} spacing={2} direction=\"row\">\r\n        {props.monsters.map((monster) => (\r\n          <Card key={monster.id} monster={monster} />\r\n        ))}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.css\";\r\nimport {TextField, Container } from \"@material-ui/core\";\r\n\r\nfunction SearchBox({ placeholder, handleChange }) {\r\n  return (\r\n    <Container maxWidth=\"sm\" id=\"search-container\">\r\n      <TextField\r\n        variant=\"outlined\"\r\n        id=\"search-field\"\r\n        fullWidth\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { CardList } from \"./components/card-list\";\r\nimport SearchBox from \"./components/search-box\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ monsters: users }));\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ searchField: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter((monster) =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div className={\"App\"}>\r\n        <h1 className={\"title\"}>Monsters Rolodex</h1>\r\n        <SearchBox\r\n          placeholder=\"search monsters\"\r\n          handleChange={this.handleChange}\r\n        />\r\n        <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}